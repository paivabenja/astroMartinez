---
interface Props {
  title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <script
      is:inline
      src="https://kit.fontawesome.com/3bd634527b.js"
      crossorigin="anonymous"></script>
    <meta charset="UTF-8" />
    <meta name="description" content="Astro description" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
  </head>
  <body class="antialiased w-screen bg-gray-100">
    <slot />
  </body>
</html>

<style is:global>
  body {
    overflow-x: hidden;
  }

  .prevToAnimation {
    opacity: 0;
    filter: blur(5px);
    transform: translateX(-100%);
    transition: all 1.5s;
  }

  .show {
    opacity: 1;
    transform: translateX(0);
    transition: all 1.5s;
    filter: blur(0);
  }
</style>

<script>
  const observer = new IntersectionObserver((entries) => {
    entries.forEach((entry) => {
      // console.log(entry);
      if (entry.isIntersecting) {
        entry.target.classList.add("show");
      } else {
        entry.target.classList.remove("show");
      }
    });
  });

  const prevToAnimationElements = document.querySelectorAll(".prevToAnimation");
  prevToAnimationElements.forEach((element) => observer.observe(element));
</script>
